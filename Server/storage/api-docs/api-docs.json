{
    "openapi": "3.0.0",
    "info": {
        "title": "PWP - Movie Suggestions",
        "description": "L5 Swagger OpenApi description",
        "contact": {
            "name": " the backend developer",
            "email": "aujhazi20@student.oulu.fi"
        },
        "license": {
            "name": "Contact the frontend developer",
            "url": "mailto:hadi.mir@student.oulu.fi"
        },
        "version": "1.0.1"
    },
    "servers": [
        {
            "url": "http://18.196.196.249/",
            "description": "PWP Demo API Server"
        }
    ],
    "paths": {
        "/api/contents": {
            "get": {
                "tags": [
                    "Contents"
                ],
                "summary": "get the complete list of content available",
                "description": "Returns list of movies",
                "operationId": "getProjectsList",
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            },
            "post": {
                "tags": [
                    "Contents"
                ],
                "summary": "add content",
                "description": "add content",
                "operationId": "getProjectsList",
                "parameters": [
                    {
                        "name": "title",
                        "in": "query",
                        "required": true
                    },
                    {
                        "name": "trailer_url",
                        "in": "query",
                        "required": false
                    },
                    {
                        "name": "description",
                        "in": "query",
                        "required": false
                    },
                    {
                        "name": "director",
                        "in": "query",
                        "required": false
                    },
                    {
                        "name": "release_date",
                        "in": "query",
                        "required": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            }
        },
        "/api/contents/{content}": {
            "get": {
                "tags": [
                    "Content"
                ],
                "summary": "show content",
                "description": "show content",
                "operationId": "getProjectsList",
                "parameters": [
                    {
                        "name": "content",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "Not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "Content"
                ],
                "summary": "edit content",
                "description": "edit content",
                "operationId": "getProjectsList",
                "parameters": [
                    {
                        "name": "content",
                        "in": "path",
                        "required": true
                    },
                    {
                        "name": "title",
                        "in": "query",
                        "required": false
                    },
                    {
                        "name": "trailer_url",
                        "in": "query",
                        "required": false
                    },
                    {
                        "name": "description",
                        "in": "query",
                        "required": false
                    },
                    {
                        "name": "director",
                        "in": "query",
                        "required": false
                    },
                    {
                        "name": "release_date",
                        "in": "query",
                        "required": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "404": {
                        "description": "Not found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Content"
                ],
                "summary": "delete content",
                "description": "delete content",
                "operationId": "getProjectsList",
                "parameters": [
                    {
                        "name": "content",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                }
            }
        },
        "/api/contents/{content}/genres": {
            "get": {
                "tags": [
                    "Content Genres"
                ],
                "summary": "list of genres belonging to a certain content",
                "description": "Returns list of genres belonging to a certain content",
                "operationId": "getProjectsList",
                "parameters": [
                    {
                        "name": "content",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "Not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "Content Genres"
                ],
                "summary": "Update list of genres for selected content. Takes list of IDs.",
                "description": "Update list of genres for selected content. Takes list of IDs.",
                "operationId": "getProjectsList",
                "parameters": [
                    {
                        "name": "content",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "404": {
                        "description": "Not found"
                    }
                }
            }
        },
        "/api/users/{user}/favorites": {
            "get": {
                "tags": [
                    "User Favorites"
                ],
                "summary": "list of favorite contents belonging to a certain user",
                "description": "Returns list of favorite contents belonging to a certain user",
                "operationId": "getProjectsList",
                "parameters": [
                    {
                        "name": "user",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "Not found"
                    }
                }
            },
            "post": {
                "tags": [
                    "User Favorites"
                ],
                "summary": "Add Favorite",
                "description": "Adds the selected content to the list of the users' favorite contents.",
                "operationId": "getProjectsList",
                "parameters": [
                    {
                        "name": "user",
                        "in": "path",
                        "required": true
                    },
                    {
                        "name": "favorite",
                        "in": "query",
                        "description": "content to be added as favorite",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "404": {
                        "description": "Not found"
                    }
                }
            }
        },
        "/api/users/{user}/favorites/{favorite}": {
            "delete": {
                "tags": [
                    "User Favorite"
                ],
                "summary": "Remove favorite",
                "description": "From the list of a users favorite contents, remove the selected one.",
                "operationId": "getProjectsList",
                "parameters": [
                    {
                        "name": "user",
                        "in": "path",
                        "required": true
                    },
                    {
                        "name": "favorite",
                        "in": "path",
                        "description": "content to be removed as favorite",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                }
            }
        },
        "/api/genres": {
            "get": {
                "tags": [
                    "Genres"
                ],
                "summary": "complete list of all genres",
                "description": "Returns list of genres",
                "operationId": "getProjectsList",
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            },
            "post": {
                "tags": [
                    "Genres"
                ],
                "summary": "add genre",
                "description": "add genre",
                "operationId": "getProjectsList",
                "parameters": [
                    {
                        "name": "name",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "404": {
                        "description": "Not found"
                    }
                }
            }
        },
        "/api/genres/{genre}": {
            "get": {
                "tags": [
                    "Genre"
                ],
                "summary": "show genre",
                "description": "show genre",
                "operationId": "getProjectsList",
                "parameters": [
                    {
                        "name": "genre",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "Not found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Genre"
                ],
                "summary": "delete genre",
                "description": "delete genre",
                "operationId": "getProjectsList",
                "parameters": [
                    {
                        "name": "genre",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "404": {
                        "description": "Not found"
                    }
                }
            }
        },
        "/api/login": {
            "post": {
                "tags": [
                    "User actions"
                ],
                "summary": "user login",
                "description": "Gets the user ID and the user hash based on email and password.",
                "operationId": "getProjectsList",
                "parameters": [
                    {
                        "name": "email",
                        "in": "query",
                        "required": true
                    },
                    {
                        "name": "password",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            }
        },
        "/api/logout": {
            "post": {
                "tags": [
                    "User actions"
                ],
                "summary": "user logout",
                "description": "remove the hash used for the users authentication",
                "operationId": "getProjectsList",
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                }
            }
        },
        "/api/profiles": {
            "post": {
                "tags": [
                    "Profile"
                ],
                "summary": "Create profile",
                "description": "Creates a new profile",
                "operationId": "getProjectsList",
                "parameters": [
                    {
                        "name": "name",
                        "in": "query",
                        "required": true
                    },
                    {
                        "name": "birth_date",
                        "in": "query",
                        "required": false
                    },
                    {
                        "name": "gender",
                        "in": "query",
                        "required": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                }
            }
        },
        "/api/profiles/{profile}": {
            "get": {
                "tags": [
                    "Profile"
                ],
                "summary": "Show profile",
                "description": "Get all info about a user profile",
                "operationId": "getProjectsList",
                "parameters": [
                    {
                        "name": "profile",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "404": {
                        "description": "Not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "Profile"
                ],
                "summary": "Update profile",
                "description": "Update the current users profile",
                "operationId": "getProjectsList",
                "parameters": [
                    {
                        "name": "profile",
                        "in": "path",
                        "required": true
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "required": false
                    },
                    {
                        "name": "birth_date",
                        "in": "query",
                        "required": false
                    },
                    {
                        "name": "gender",
                        "in": "query",
                        "required": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "404": {
                        "description": "Not found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Profile"
                ],
                "summary": "delete profile",
                "description": "soft delete the profile of a current user - the account will still continue to exist.",
                "operationId": "getProjectsList",
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "404": {
                        "description": "Not found"
                    }
                }
            }
        },
        "/api/update-password": {
            "post": {
                "tags": [
                    "User actions"
                ],
                "summary": "change password",
                "description": "updates the password of the user logged in",
                "operationId": "getProjectsList",
                "parameters": [
                    {
                        "name": "new-password",
                        "in": "query",
                        "required": true
                    },
                    {
                        "name": "email",
                        "in": "query",
                        "required": true
                    },
                    {
                        "name": "password",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Missing parameter: new-password"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                }
            }
        },
        "/api/register": {
            "post": {
                "tags": [
                    "User actions"
                ],
                "summary": "Register user",
                "description": "Register user",
                "operationId": "getProjectsList",
                "parameters": [
                    {
                        "name": "email",
                        "in": "query",
                        "required": true
                    },
                    {
                        "name": "password",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Both email and password must be defined./Invalid email format./Existing user, choose a different email."
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "Content": {
                "title": "Content",
                "description": "Content model, used only for movies for now.",
                "properties": {
                    "slug": {
                        "description": "ID of a movie, represents the slugified title",
                        "type": "string",
                        "example": "infinity-wars"
                    },
                    "title": {
                        "description": "The name of the movie",
                        "type": "string",
                        "example": "Inception"
                    },
                    "trailer_url": {
                        "description": "URL to the trailer, optional",
                        "type": "string",
                        "example": "https://www.youtube.com/watch?v=6ZfuNTqbHE8"
                    },
                    "description": {
                        "description": "Description of the content, optional",
                        "type": "string",
                        "example": "A team of explorers travel through a wormhole in space in an attempt to ensure humanity's survival."
                    },
                    "director": {
                        "description": "Name of the director, optional",
                        "type": "string",
                        "example": "Steven Spilberg"
                    },
                    "release_date": {
                        "description": "The year when the content was officially released, optional",
                        "type": "integer",
                        "format": "YYYY",
                        "example": "2020"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "Content"
                }
            },
            "Genre": {
                "title": "Genre",
                "description": "Genre model",
                "properties": {
                    "id": {
                        "description": "ID of genre",
                        "type": "integer",
                        "example": "1"
                    },
                    "name": {
                        "description": "Genre category",
                        "type": "string",
                        "example": "Crime"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "Genre"
                }
            },
            "Profile": {
                "title": "Profile",
                "description": "Profile model",
                "properties": {
                    "id": {
                        "description": "ID of profile",
                        "type": "integer",
                        "example": "1"
                    },
                    "name": {
                        "description": "Name of the user",
                        "type": "string",
                        "example": "Arnold Ujhazi"
                    },
                    "birth_date": {
                        "description": "Birth date of a profile",
                        "type": "integer",
                        "format": "YYYY",
                        "example": "1989"
                    },
                    "gender": {
                        "description": "Gender of a user, optional",
                        "type": "string",
                        "example": "male"
                    },
                    "country_id": {
                        "description": "Country of the user, optional",
                        "type": "string",
                        "example": "FI"
                    },
                    "user_id": {
                        "description": "ID of the user who owns the profile",
                        "type": "integer",
                        "example": "1"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "Profile"
                }
            },
            "User": {
                "title": "User",
                "description": "User model",
                "properties": {
                    "id": {
                        "description": "ID of the user",
                        "type": "integer",
                        "example": "1"
                    },
                    "email": {
                        "description": "User email",
                        "type": "string",
                        "format": "email",
                        "example": "aujhazi20@student.oulu.fi"
                    },
                    "password": {
                        "description": "User password",
                        "type": "string"
                    },
                    "hash": {
                        "description": "Generated when the user >logs in<, deleted when the user >logs out<, used to determine access right for certain API calls",
                        "type": "integer"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "User"
                }
            }
        }
    },
    "tags": [
        {
            "name": "PWP Project",
            "description": "API Endpoints of Movie Suggestions"
        }
    ],
    "security": [
        []
    ]
}